annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
application.args=
application.title=fitDataViewers
application.vendor=nigel
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/fitDataViewers.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.swing-worker.jar=/usr/share/java/swing-worker.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.swing-worker.jar}:\
    ${libs.JNPL.classpath}:\
    ${libs.log4j.classpath}:\
    ${reference.coords-superdarn.jar}:\
    ${reference.coords.jar}:\
    ${reference.dataServerAPI.jar}:\
    ${reference.fitData.jar}:\
    ${reference.fitDataBeans.jar}:\
    ${reference.rmiServerInterface.jar}
# Space-separated list of extra javac options
javac.compilerargs=-Xlint:unchecked
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=JDK_1.6
project.coords=../coords
project.coords-superdarn=../coords-superdarn
project.dataServerAPI=../dataServerAPI
project.fitData=../fitData
project.fitDataBeans=../fitDataBeans
project.rmiServerInterface=../rmiServerInterface
reference.coords-superdarn.jar=${project.coords-superdarn}/dist/coords-superdarn.jar
reference.coords.jar=${project.coords}/dist/coords.jar
reference.dataServerAPI.jar=${project.dataServerAPI}/dist/dataServerAPI.jar
reference.fitData.jar=${project.fitData}/dist/fitData.jar
reference.fitDataBeans.jar=${project.fitDataBeans}/dist/fitDataBeans.jar
reference.rmiServerInterface.jar=${project.rmiServerInterface}/dist/rmiServerInterface.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-Djava.security.policy=applet.policy
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.dir=src
test.src.dir=test
