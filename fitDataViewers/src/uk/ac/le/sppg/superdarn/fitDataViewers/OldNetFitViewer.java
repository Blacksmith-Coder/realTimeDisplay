/*
 * NetFitViewer.java
 *
 * Created on 21 July 2003, 17:26
 */

package uk.ac.le.sppg.superdarn.fitDataViewers;

import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Insets;
import java.text.DateFormat;

import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import uk.ac.le.sppg.superdarn.fitData.NetFitData;


/**
 *
 * @author  nigel
 */
public class OldNetFitViewer extends JPanel {
    
    private static final long serialVersionUID = 0x5253505047000032L;
    
    /** Initializes the applet NetFitViewer */
    public void init() {
        initComponents();
        
        metrics = this.getGraphics().getFontMetrics();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        topPanel = new javax.swing.JPanel();
        dateField = new javax.swing.JTextField();
        cpidField = new javax.swing.JTextField();
        beamField = new javax.swing.JTextField();
        dataPane = new javax.swing.JTabbedPane();
        parmsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        parmsTable = new javax.swing.JTable();
        dataPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        dateField.setBackground(java.awt.Color.white);
        dateField.setColumns(20);
        dateField.setEditable(false);
        dateField.setToolTipText("Date of data");
        dateField.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        topPanel.add(dateField);

        cpidField.setBackground(java.awt.Color.white);
        cpidField.setColumns(3);
        cpidField.setEditable(false);
        cpidField.setToolTipText("CPID");
        cpidField.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        topPanel.add(cpidField);

        beamField.setBackground(java.awt.Color.white);
        beamField.setColumns(1);
        beamField.setEditable(false);
        beamField.setToolTipText("Beam number");
        beamField.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        topPanel.add(beamField);

        add(topPanel, java.awt.BorderLayout.NORTH);

        parmsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Revision", null, null},
                {"Station id", null, null},
                {"Date", null, null},
                {"Tx power", null, "kW"},
                {"No. Ave.", null, ""},
                {"Attn.", null, "dB"},
                {"Lag to 1st ", null, "uS"},
                {"Sample sep", null, "uS"},
                {"Error code", null, null},
                {"AGC status", null, null},
                {"Low pwr status", null, null},
                {"No. Baud", null, null},
                {"Noise level", null, null},
                {"Noise mean", null, null},
                {"Channel", null, null},
                {"Rx rise time", null, "uS"},
                {"Integration", null, "S"},
                {"Pulse length", null, "uS"},
                {"Lag sep.", null, "uS"},
                {"No. pulses", null, null},
                {"No. lags", null, null},
                {"No. ranges", null, null},
                {"First range", null, "km"},
                {"Range sep.", null, "km"},
                {"Beam no.", null, null},
                {"X corr.", null, null},
                {"Tx freq.", null, "kHz"},
                {"Scan flag", null, null},
                {"Max. power", null, null},
                {"Max. noise", null, null},
                {"User L1", null, null},
                {"User L2", null, null},
                {"CPID", null, null},
                {"User S1", null, null},
                {"User S2", null, null},
                {"User S3", null, null}
            },
            new String [] {
                "Name", "Value", "Notes"
            }
        ) {
            private static final long serialVersionUID = 0x5253505047000033L;
            
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(parmsTable);

        parmsPanel.add(jScrollPane1);

        dataPane.addTab("Radar parms", null, parmsPanel, "Radar parameters");

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Range gate", "Range (km)", "Ground scatter", "Power", "Velocity", "Width"
            }
        ) {
            private static final long serialVersionUID = 0x5253505047000034L;
            
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(dataTable);

        dataPanel.add(jScrollPane2);

        dataPane.addTab("Data", null, dataPanel, "Data");

        add(dataPane, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField beamField;
    private javax.swing.JTextField cpidField;
    private javax.swing.JTabbedPane dataPane;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JTable dataTable;
    private javax.swing.JTextField dateField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel parmsPanel;
    private javax.swing.JTable parmsTable;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

    private FontMetrics metrics;
    private DateFormat dateFormat = DateFormat.getDateTimeInstance( DateFormat.LONG, DateFormat.LONG );
    				  // date/time format for the dateField
    				  // currently LONG format for locale GMT

    public JTextField getBeamField() { return beamField; }
    public JTextField getCpidField() { return cpidField; }
    public JTextField getDateField() { return dateField; }
    public JTable getParmsTable() { return parmsTable; }
    public JTable getDataTable() { return dataTable; }
    
    public void setData( NetFitData data ) {

        // set the values of the textFields
        String str = dateFormat.format( data.radarParms.date );
        int width = metrics.stringWidth( str );
        Insets i = dateField.getInsets();
        
        Dimension d = dateField.getSize();
        d.width = width + i.left + i.right;
        
        if ( d.width < width ) {
            d.width = width;
            dateField.setMinimumSize( d );
            dateField.setPreferredSize( d );
            dateField.invalidate();
            this.validate();
        }

        dateField.setText( str );
        
        cpidField.setText( String.valueOf( data.radarParms.controlProgramId ) );
        beamField.setText( String.valueOf( data.radarParms.beamNumber ) );
        
        // set the values in the radarParms table
        
        parmsTable.setValueAt( new Float( data.radarParms.revision.major+data.radarParms.revision.minor*0.1 ), 0, 0 );
        parmsTable.setValueAt( new Short( data.radarParms.stationId ), 1, 1 );
        parmsTable.setValueAt( str, 1, 2 );
        
        
    }
    
}
